//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STH.BiometricIdentityService.FvtClient.FvtProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResult", Namespace="http://hitachisoft.jp/aug/")]
    [System.SerializableAttribute()]
    public partial class AuthenticationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResultCode ResultField;
        
        private int FvCoreReturnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sUUIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sUUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnMessageField;
        
        private int nMatchesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResultCode Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int FvCoreReturnCode {
            get {
                return this.FvCoreReturnCodeField;
            }
            set {
                if ((this.FvCoreReturnCodeField.Equals(value) != true)) {
                    this.FvCoreReturnCodeField = value;
                    this.RaisePropertyChanged("FvCoreReturnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sUUIDs {
            get {
                return this.sUUIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.sUUIDsField, value) != true)) {
                    this.sUUIDsField = value;
                    this.RaisePropertyChanged("sUUIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string sUUID {
            get {
                return this.sUUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.sUUIDField, value) != true)) {
                    this.sUUIDField = value;
                    this.RaisePropertyChanged("sUUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ReturnMessage {
            get {
                return this.ReturnMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnMessageField, value) != true)) {
                    this.ReturnMessageField = value;
                    this.RaisePropertyChanged("ReturnMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int nMatches {
            get {
                return this.nMatchesField;
            }
            set {
                if ((this.nMatchesField.Equals(value) != true)) {
                    this.nMatchesField = value;
                    this.RaisePropertyChanged("nMatches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResultCode", Namespace="http://hitachisoft.jp/aug/")]
    public enum AuthenticationResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Succeed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNotFound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotMatched = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Duplicate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleMatched = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidUUID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEnrolTemplate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidVerifyTemplate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateUUID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnauthorisedClientRequest = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalFVAEError = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimebombRecoveryInProgress = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnrollDuplicateHasBeenRemoved = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LicenceExpired = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerStartupError = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoEnrolledUsers = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TooManyTemplates = 17,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://hitachisoft.jp/aug/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerifyTemplate", Namespace="http://hitachisoft.jp/aug/")]
    [System.SerializableAttribute()]
    public partial class VerifyTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] templateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte[] template {
            get {
                return this.templateField;
            }
            set {
                if ((object.ReferenceEquals(this.templateField, value) != true)) {
                    this.templateField = value;
                    this.RaisePropertyChanged("template");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnrolTemplate", Namespace="http://hitachisoft.jp/aug/")]
    [System.SerializableAttribute()]
    public partial class EnrolTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private STH.BiometricIdentityService.FvtClient.FvtProxy.TemplateVersion VersionField;
        
        private STH.BiometricIdentityService.FvtClient.FvtProxy.Hand primaryHandField;
        
        private STH.BiometricIdentityService.FvtClient.FvtProxy.Hand backupHandField;
        
        private STH.BiometricIdentityService.FvtClient.FvtProxy.Finger primaryFingerField;
        
        private STH.BiometricIdentityService.FvtClient.FvtProxy.Finger backupFingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] primaryEnrolTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] primaryVerifyTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] backupEnrolTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] backupVerifyTemplateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.TemplateVersion Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.Hand primaryHand {
            get {
                return this.primaryHandField;
            }
            set {
                if ((this.primaryHandField.Equals(value) != true)) {
                    this.primaryHandField = value;
                    this.RaisePropertyChanged("primaryHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.Hand backupHand {
            get {
                return this.backupHandField;
            }
            set {
                if ((this.backupHandField.Equals(value) != true)) {
                    this.backupHandField = value;
                    this.RaisePropertyChanged("backupHand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.Finger primaryFinger {
            get {
                return this.primaryFingerField;
            }
            set {
                if ((this.primaryFingerField.Equals(value) != true)) {
                    this.primaryFingerField = value;
                    this.RaisePropertyChanged("primaryFinger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.Finger backupFinger {
            get {
                return this.backupFingerField;
            }
            set {
                if ((this.backupFingerField.Equals(value) != true)) {
                    this.backupFingerField = value;
                    this.RaisePropertyChanged("backupFinger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public byte[] primaryEnrolTemplate {
            get {
                return this.primaryEnrolTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.primaryEnrolTemplateField, value) != true)) {
                    this.primaryEnrolTemplateField = value;
                    this.RaisePropertyChanged("primaryEnrolTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public byte[] primaryVerifyTemplate {
            get {
                return this.primaryVerifyTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.primaryVerifyTemplateField, value) != true)) {
                    this.primaryVerifyTemplateField = value;
                    this.RaisePropertyChanged("primaryVerifyTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public byte[] backupEnrolTemplate {
            get {
                return this.backupEnrolTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.backupEnrolTemplateField, value) != true)) {
                    this.backupEnrolTemplateField = value;
                    this.RaisePropertyChanged("backupEnrolTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public byte[] backupVerifyTemplate {
            get {
                return this.backupVerifyTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.backupVerifyTemplateField, value) != true)) {
                    this.backupVerifyTemplateField = value;
                    this.RaisePropertyChanged("backupVerifyTemplate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateVersion", Namespace="http://hitachisoft.jp/aug/")]
    public enum TemplateVersion : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Backup = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hand", Namespace="http://hitachisoft.jp/aug/")]
    public enum Hand : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Finger", Namespace="http://hitachisoft.jp/aug/")]
    public enum Finger : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PointerFinger = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleFinger = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RingFinger = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionLog", Namespace="http://hitachisoft.jp/aug/")]
    [System.SerializableAttribute()]
    public partial class TransactionLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sUUIDField;
        
        private int sTypeField;
        
        private int sStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sTimestamp {
            get {
                return this.sTimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.sTimestampField, value) != true)) {
                    this.sTimestampField = value;
                    this.RaisePropertyChanged("sTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sUUID {
            get {
                return this.sUUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.sUUIDField, value) != true)) {
                    this.sUUIDField = value;
                    this.RaisePropertyChanged("sUUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int sType {
            get {
                return this.sTypeField;
            }
            set {
                if ((this.sTypeField.Equals(value) != true)) {
                    this.sTypeField = value;
                    this.RaisePropertyChanged("sType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int sStatus {
            get {
                return this.sStatusField;
            }
            set {
                if ((this.sStatusField.Equals(value) != true)) {
                    this.sStatusField = value;
                    this.RaisePropertyChanged("sStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string sMessage {
            get {
                return this.sMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.sMessageField, value) != true)) {
                    this.sMessageField = value;
                    this.RaisePropertyChanged("sMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://hitachisoft.jp/aug/", ConfigurationName="FvtProxy.AuthenticationServiceSoap")]
    public interface AuthenticationServiceSoap {
        
        // CODEGEN: Generating message contract since element name sUUID from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Remove", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponse Remove(STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Remove", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponse> RemoveAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest request);
        
        // CODEGEN: Generating message contract since element name DeleteAllUsersResult from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/DeleteAllUsers", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponse DeleteAllUsers(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/DeleteAllUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponse> DeleteAllUsersAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest request);
        
        // CODEGEN: Generating message contract since element name template from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Verify", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponse Verify(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Verify", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponse> VerifyAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest request);
        
        // CODEGEN: Generating message contract since element name sUUID from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Enrol", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponse Enrol(STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Enrol", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponse> EnrolAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest request);
        
        // CODEGEN: Generating message contract since element name sUUID from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/ReEnrol", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponse ReEnrol(STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/ReEnrol", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponse> ReEnrolAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest request);
        
        // CODEGEN: Generating message contract since element name template from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Identify", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponse Identify(STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/Identify", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponse> IdentifyAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetUsers", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponse GetUsers(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponse> GetUsersAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetUserTransactions", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponse GetUserTransactions(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetUserTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponse> GetUserTransactionsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetVersion", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponse GetVersion(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponse> GetVersionAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest request);
        
        // CODEGEN: Generating message contract since element name sLicence from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/SetLicence", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponse SetLicence(STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/SetLicence", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponse> SetLicenceAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetTransactions", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponse GetTransactions(STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponse> GetTransactionsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest request);
        
        // CODEGEN: Generating message contract since element name sDateStart from namespace http://hitachisoft.jp/aug/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/DeleteTransactionLog", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponse DeleteTransactionLog(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/DeleteTransactionLog", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponse> DeleteTransactionLogAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetIdMetrics", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponse GetIdMetrics(STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetIdMetrics", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponse> GetIdMetricsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetVerMetrics", ReplyAction="*")]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponse GetVerMetrics(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hitachisoft.jp/aug/GetVerMetrics", ReplyAction="*")]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponse> GetVerMetricsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Remove", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequestBody Body;
        
        public RemoveRequest() {
        }
        
        public RemoveRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class RemoveRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sUUID;
        
        public RemoveRequestBody() {
        }
        
        public RemoveRequestBody(string sUUID) {
            this.sUUID = sUUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponseBody Body;
        
        public RemoveResponse() {
        }
        
        public RemoveResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class RemoveResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult RemoveResult;
        
        public RemoveResponseBody() {
        }
        
        public RemoveResponseBody(STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult RemoveResult) {
            this.RemoveResult = RemoveResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAllUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteAllUsers", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequestBody Body;
        
        public DeleteAllUsersRequest() {
        }
        
        public DeleteAllUsersRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DeleteAllUsersRequestBody {
        
        public DeleteAllUsersRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAllUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteAllUsersResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponseBody Body;
        
        public DeleteAllUsersResponse() {
        }
        
        public DeleteAllUsersResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class DeleteAllUsersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult DeleteAllUsersResult;
        
        public DeleteAllUsersResponseBody() {
        }
        
        public DeleteAllUsersResponseBody(STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult DeleteAllUsersResult) {
            this.DeleteAllUsersResult = DeleteAllUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class VerifyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Verify", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequestBody Body;
        
        public VerifyRequest() {
        }
        
        public VerifyRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class VerifyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sUUID;
        
        public VerifyRequestBody() {
        }
        
        public VerifyRequestBody(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template, string sUUID) {
            this.template = template;
            this.sUUID = sUUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class VerifyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="VerifyResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponseBody Body;
        
        public VerifyResponse() {
        }
        
        public VerifyResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class VerifyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult VerifyResult;
        
        public VerifyResponseBody() {
        }
        
        public VerifyResponseBody(STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult VerifyResult) {
            this.VerifyResult = VerifyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnrolRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Enrol", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequestBody Body;
        
        public EnrolRequest() {
        }
        
        public EnrolRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class EnrolRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool fBackupPresent;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sUUID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate;
        
        public EnrolRequestBody() {
        }
        
        public EnrolRequestBody(bool fBackupPresent, string sUUID, STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate) {
            this.fBackupPresent = fBackupPresent;
            this.sUUID = sUUID;
            this.etTemplate = etTemplate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnrolResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EnrolResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponseBody Body;
        
        public EnrolResponse() {
        }
        
        public EnrolResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class EnrolResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult EnrolResult;
        
        public EnrolResponseBody() {
        }
        
        public EnrolResponseBody(STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult EnrolResult) {
            this.EnrolResult = EnrolResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReEnrolRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReEnrol", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequestBody Body;
        
        public ReEnrolRequest() {
        }
        
        public ReEnrolRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class ReEnrolRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool fBackupPresent;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sUUID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate;
        
        public ReEnrolRequestBody() {
        }
        
        public ReEnrolRequestBody(bool fBackupPresent, string sUUID, STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate) {
            this.fBackupPresent = fBackupPresent;
            this.sUUID = sUUID;
            this.etTemplate = etTemplate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReEnrolResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReEnrolResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponseBody Body;
        
        public ReEnrolResponse() {
        }
        
        public ReEnrolResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class ReEnrolResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult ReEnrolResult;
        
        public ReEnrolResponseBody() {
        }
        
        public ReEnrolResponseBody(STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult ReEnrolResult) {
            this.ReEnrolResult = ReEnrolResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IdentifyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Identify", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequestBody Body;
        
        public IdentifyRequest() {
        }
        
        public IdentifyRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class IdentifyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template;
        
        public IdentifyRequestBody() {
        }
        
        public IdentifyRequestBody(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template) {
            this.template = template;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IdentifyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IdentifyResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponseBody Body;
        
        public IdentifyResponse() {
        }
        
        public IdentifyResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class IdentifyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult IdentifyResult;
        
        public IdentifyResponseBody() {
        }
        
        public IdentifyResponseBody(STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult IdentifyResult) {
            this.IdentifyResult = IdentifyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUsers", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequestBody Body;
        
        public GetUsersRequest() {
        }
        
        public GetUsersRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetUsersRequestBody {
        
        public GetUsersRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUsersResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponseBody Body;
        
        public GetUsersResponse() {
        }
        
        public GetUsersResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetUsersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetUsersResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int nUsers;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sUUIDs;
        
        public GetUsersResponseBody() {
        }
        
        public GetUsersResponseBody(int GetUsersResult, int nUsers, STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sUUIDs) {
            this.GetUsersResult = GetUsersResult;
            this.nUsers = nUsers;
            this.sUUIDs = sUUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUserTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUserTransactions", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequestBody Body;
        
        public GetUserTransactionsRequest() {
        }
        
        public GetUserTransactionsRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetUserTransactionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sUUID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sDateStart;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sDateEnd;
        
        public GetUserTransactionsRequestBody() {
        }
        
        public GetUserTransactionsRequestBody(string sUUID, string sDateStart, string sDateEnd) {
            this.sUUID = sUUID;
            this.sDateStart = sDateStart;
            this.sDateEnd = sDateEnd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUserTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUserTransactionsResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponseBody Body;
        
        public GetUserTransactionsResponse() {
        }
        
        public GetUserTransactionsResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetUserTransactionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetUserTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.TransactionLog[] aTransactions;
        
        public GetUserTransactionsResponseBody() {
        }
        
        public GetUserTransactionsResponseBody(int GetUserTransactionsResult, STH.BiometricIdentityService.FvtClient.FvtProxy.TransactionLog[] aTransactions) {
            this.GetUserTransactionsResult = GetUserTransactionsResult;
            this.aTransactions = aTransactions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVersionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVersion", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequestBody Body;
        
        public GetVersionRequest() {
        }
        
        public GetVersionRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetVersionRequestBody {
        
        public GetVersionRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVersionResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponseBody Body;
        
        public GetVersionResponse() {
        }
        
        public GetVersionResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetVersionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetVersionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sDatas;
        
        public GetVersionResponseBody() {
        }
        
        public GetVersionResponseBody(int GetVersionResult, STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sDatas) {
            this.GetVersionResult = GetVersionResult;
            this.sDatas = sDatas;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetLicenceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetLicence", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequestBody Body;
        
        public SetLicenceRequest() {
        }
        
        public SetLicenceRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class SetLicenceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sLicence;
        
        public SetLicenceRequestBody() {
        }
        
        public SetLicenceRequestBody(string sLicence) {
            this.sLicence = sLicence;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetLicenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetLicenceResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponseBody Body;
        
        public SetLicenceResponse() {
        }
        
        public SetLicenceResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class SetLicenceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int SetLicenceResult;
        
        public SetLicenceResponseBody() {
        }
        
        public SetLicenceResponseBody(int SetLicenceResult) {
            this.SetLicenceResult = SetLicenceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTransactions", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequestBody Body;
        
        public GetTransactionsRequest() {
        }
        
        public GetTransactionsRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetTransactionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sDateStart;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sDateEnd;
        
        public GetTransactionsRequestBody() {
        }
        
        public GetTransactionsRequestBody(string sDateStart, string sDateEnd) {
            this.sDateStart = sDateStart;
            this.sDateEnd = sDateEnd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTransactionsResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponseBody Body;
        
        public GetTransactionsResponse() {
        }
        
        public GetTransactionsResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetTransactionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.TransactionLog[] aTransactions;
        
        public GetTransactionsResponseBody() {
        }
        
        public GetTransactionsResponseBody(int GetTransactionsResult, STH.BiometricIdentityService.FvtClient.FvtProxy.TransactionLog[] aTransactions) {
            this.GetTransactionsResult = GetTransactionsResult;
            this.aTransactions = aTransactions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteTransactionLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteTransactionLog", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequestBody Body;
        
        public DeleteTransactionLogRequest() {
        }
        
        public DeleteTransactionLogRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class DeleteTransactionLogRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sDateStart;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sDateEnd;
        
        public DeleteTransactionLogRequestBody() {
        }
        
        public DeleteTransactionLogRequestBody(string sDateStart, string sDateEnd) {
            this.sDateStart = sDateStart;
            this.sDateEnd = sDateEnd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteTransactionLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteTransactionLogResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponseBody Body;
        
        public DeleteTransactionLogResponse() {
        }
        
        public DeleteTransactionLogResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class DeleteTransactionLogResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int DeleteTransactionLogResult;
        
        public DeleteTransactionLogResponseBody() {
        }
        
        public DeleteTransactionLogResponseBody(int DeleteTransactionLogResult) {
            this.DeleteTransactionLogResult = DeleteTransactionLogResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIdMetricsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetIdMetrics", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequestBody Body;
        
        public GetIdMetricsRequest() {
        }
        
        public GetIdMetricsRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetIdMetricsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sDateStart;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sDateEnd;
        
        public GetIdMetricsRequestBody() {
        }
        
        public GetIdMetricsRequestBody(string sDateStart, string sDateEnd) {
            this.sDateStart = sDateStart;
            this.sDateEnd = sDateEnd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIdMetricsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetIdMetricsResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponseBody Body;
        
        public GetIdMetricsResponse() {
        }
        
        public GetIdMetricsResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetIdMetricsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetIdMetricsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int nAttempts;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int nsuccesses;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int nMultiples;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int nNotMatched;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int nFailures;
        
        public GetIdMetricsResponseBody() {
        }
        
        public GetIdMetricsResponseBody(int GetIdMetricsResult, int nAttempts, int nsuccesses, int nMultiples, int nNotMatched, int nFailures) {
            this.GetIdMetricsResult = GetIdMetricsResult;
            this.nAttempts = nAttempts;
            this.nsuccesses = nsuccesses;
            this.nMultiples = nMultiples;
            this.nNotMatched = nNotMatched;
            this.nFailures = nFailures;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVerMetricsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVerMetrics", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequestBody Body;
        
        public GetVerMetricsRequest() {
        }
        
        public GetVerMetricsRequest(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetVerMetricsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sDateStart;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sDateEnd;
        
        public GetVerMetricsRequestBody() {
        }
        
        public GetVerMetricsRequestBody(string sDateStart, string sDateEnd) {
            this.sDateStart = sDateStart;
            this.sDateEnd = sDateEnd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVerMetricsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVerMetricsResponse", Namespace="http://hitachisoft.jp/aug/", Order=0)]
        public STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponseBody Body;
        
        public GetVerMetricsResponse() {
        }
        
        public GetVerMetricsResponse(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hitachisoft.jp/aug/")]
    public partial class GetVerMetricsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetVerMetricsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int nAttempts;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int nsuccesses;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int nMultiples;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int nNoMatchs;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int nFailures;
        
        public GetVerMetricsResponseBody() {
        }
        
        public GetVerMetricsResponseBody(int GetVerMetricsResult, int nAttempts, int nsuccesses, int nMultiples, int nNoMatchs, int nFailures) {
            this.GetVerMetricsResult = GetVerMetricsResult;
            this.nAttempts = nAttempts;
            this.nsuccesses = nsuccesses;
            this.nMultiples = nMultiples;
            this.nNoMatchs = nNoMatchs;
            this.nFailures = nFailures;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthenticationServiceSoapChannel : STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceSoapClient : System.ServiceModel.ClientBase<STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap>, STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap {
        
        public AuthenticationServiceSoapClient() {
        }
        
        public AuthenticationServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.Remove(STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest request) {
            return base.Channel.Remove(request);
        }
        
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult Remove(string sUUID) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequestBody();
            inValue.Body.sUUID = sUUID;
            STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).Remove(inValue);
            return retVal.Body.RemoveResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.RemoveAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest request) {
            return base.Channel.RemoveAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveResponse> RemoveAsync(string sUUID) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.RemoveRequestBody();
            inValue.Body.sUUID = sUUID;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).RemoveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.DeleteAllUsers(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest request) {
            return base.Channel.DeleteAllUsers(request);
        }
        
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult DeleteAllUsers() {
            STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequestBody();
            STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).DeleteAllUsers(inValue);
            return retVal.Body.DeleteAllUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.DeleteAllUsersAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest request) {
            return base.Channel.DeleteAllUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersResponse> DeleteAllUsersAsync() {
            STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteAllUsersRequestBody();
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).DeleteAllUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.Verify(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest request) {
            return base.Channel.Verify(request);
        }
        
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult Verify(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template, string sUUID) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequestBody();
            inValue.Body.template = template;
            inValue.Body.sUUID = sUUID;
            STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).Verify(inValue);
            return retVal.Body.VerifyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.VerifyAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest request) {
            return base.Channel.VerifyAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyResponse> VerifyAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template, string sUUID) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyRequestBody();
            inValue.Body.template = template;
            inValue.Body.sUUID = sUUID;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).VerifyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.Enrol(STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest request) {
            return base.Channel.Enrol(request);
        }
        
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult Enrol(bool fBackupPresent, string sUUID, STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequestBody();
            inValue.Body.fBackupPresent = fBackupPresent;
            inValue.Body.sUUID = sUUID;
            inValue.Body.etTemplate = etTemplate;
            STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).Enrol(inValue);
            return retVal.Body.EnrolResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.EnrolAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest request) {
            return base.Channel.EnrolAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolResponse> EnrolAsync(bool fBackupPresent, string sUUID, STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolRequestBody();
            inValue.Body.fBackupPresent = fBackupPresent;
            inValue.Body.sUUID = sUUID;
            inValue.Body.etTemplate = etTemplate;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).EnrolAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.ReEnrol(STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest request) {
            return base.Channel.ReEnrol(request);
        }
        
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult ReEnrol(bool fBackupPresent, string sUUID, STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequestBody();
            inValue.Body.fBackupPresent = fBackupPresent;
            inValue.Body.sUUID = sUUID;
            inValue.Body.etTemplate = etTemplate;
            STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).ReEnrol(inValue);
            return retVal.Body.ReEnrolResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.ReEnrolAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest request) {
            return base.Channel.ReEnrolAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolResponse> ReEnrolAsync(bool fBackupPresent, string sUUID, STH.BiometricIdentityService.FvtClient.FvtProxy.EnrolTemplate etTemplate) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.ReEnrolRequestBody();
            inValue.Body.fBackupPresent = fBackupPresent;
            inValue.Body.sUUID = sUUID;
            inValue.Body.etTemplate = etTemplate;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).ReEnrolAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.Identify(STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest request) {
            return base.Channel.Identify(request);
        }
        
        public STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationResult Identify(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequestBody();
            inValue.Body.template = template;
            STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).Identify(inValue);
            return retVal.Body.IdentifyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.IdentifyAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest request) {
            return base.Channel.IdentifyAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyResponse> IdentifyAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.VerifyTemplate template) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.IdentifyRequestBody();
            inValue.Body.template = template;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).IdentifyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetUsers(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest request) {
            return base.Channel.GetUsers(request);
        }
        
        public int GetUsers(out int nUsers, out STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sUUIDs) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequestBody();
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetUsers(inValue);
            nUsers = retVal.Body.nUsers;
            sUUIDs = retVal.Body.sUUIDs;
            return retVal.Body.GetUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetUsersAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest request) {
            return base.Channel.GetUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersResponse> GetUsersAsync() {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUsersRequestBody();
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetUserTransactions(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest request) {
            return base.Channel.GetUserTransactions(request);
        }
        
        public int GetUserTransactions(string sUUID, string sDateStart, string sDateEnd, out STH.BiometricIdentityService.FvtClient.FvtProxy.TransactionLog[] aTransactions) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequestBody();
            inValue.Body.sUUID = sUUID;
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetUserTransactions(inValue);
            aTransactions = retVal.Body.aTransactions;
            return retVal.Body.GetUserTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetUserTransactionsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest request) {
            return base.Channel.GetUserTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsResponse> GetUserTransactionsAsync(string sUUID, string sDateStart, string sDateEnd) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetUserTransactionsRequestBody();
            inValue.Body.sUUID = sUUID;
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetUserTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetVersion(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest request) {
            return base.Channel.GetVersion(request);
        }
        
        public int GetVersion(out STH.BiometricIdentityService.FvtClient.FvtProxy.ArrayOfString sDatas) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequestBody();
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetVersion(inValue);
            sDatas = retVal.Body.sDatas;
            return retVal.Body.GetVersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetVersionAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest request) {
            return base.Channel.GetVersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionResponse> GetVersionAsync() {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVersionRequestBody();
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetVersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.SetLicence(STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest request) {
            return base.Channel.SetLicence(request);
        }
        
        public int SetLicence(string sLicence) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequestBody();
            inValue.Body.sLicence = sLicence;
            STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).SetLicence(inValue);
            return retVal.Body.SetLicenceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.SetLicenceAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest request) {
            return base.Channel.SetLicenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceResponse> SetLicenceAsync(string sLicence) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.SetLicenceRequestBody();
            inValue.Body.sLicence = sLicence;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).SetLicenceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetTransactions(STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest request) {
            return base.Channel.GetTransactions(request);
        }
        
        public int GetTransactions(string sDateStart, string sDateEnd, out STH.BiometricIdentityService.FvtClient.FvtProxy.TransactionLog[] aTransactions) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetTransactions(inValue);
            aTransactions = retVal.Body.aTransactions;
            return retVal.Body.GetTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetTransactionsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest request) {
            return base.Channel.GetTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsResponse> GetTransactionsAsync(string sDateStart, string sDateEnd) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetTransactionsRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.DeleteTransactionLog(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest request) {
            return base.Channel.DeleteTransactionLog(request);
        }
        
        public int DeleteTransactionLog(string sDateStart, string sDateEnd) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).DeleteTransactionLog(inValue);
            return retVal.Body.DeleteTransactionLogResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.DeleteTransactionLogAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest request) {
            return base.Channel.DeleteTransactionLogAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogResponse> DeleteTransactionLogAsync(string sDateStart, string sDateEnd) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.DeleteTransactionLogRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).DeleteTransactionLogAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetIdMetrics(STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest request) {
            return base.Channel.GetIdMetrics(request);
        }
        
        public int GetIdMetrics(string sDateStart, string sDateEnd, out int nAttempts, out int nsuccesses, out int nMultiples, out int nNotMatched, out int nFailures) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetIdMetrics(inValue);
            nAttempts = retVal.Body.nAttempts;
            nsuccesses = retVal.Body.nsuccesses;
            nMultiples = retVal.Body.nMultiples;
            nNotMatched = retVal.Body.nNotMatched;
            nFailures = retVal.Body.nFailures;
            return retVal.Body.GetIdMetricsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetIdMetricsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest request) {
            return base.Channel.GetIdMetricsAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsResponse> GetIdMetricsAsync(string sDateStart, string sDateEnd) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetIdMetricsRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetIdMetricsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponse STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetVerMetrics(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest request) {
            return base.Channel.GetVerMetrics(request);
        }
        
        public int GetVerMetrics(string sDateStart, string sDateEnd, out int nAttempts, out int nsuccesses, out int nMultiples, out int nNoMatchs, out int nFailures) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponse retVal = ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetVerMetrics(inValue);
            nAttempts = retVal.Body.nAttempts;
            nsuccesses = retVal.Body.nsuccesses;
            nMultiples = retVal.Body.nMultiples;
            nNoMatchs = retVal.Body.nNoMatchs;
            nFailures = retVal.Body.nFailures;
            return retVal.Body.GetVerMetricsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponse> STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap.GetVerMetricsAsync(STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest request) {
            return base.Channel.GetVerMetricsAsync(request);
        }
        
        public System.Threading.Tasks.Task<STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsResponse> GetVerMetricsAsync(string sDateStart, string sDateEnd) {
            STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest inValue = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequest();
            inValue.Body = new STH.BiometricIdentityService.FvtClient.FvtProxy.GetVerMetricsRequestBody();
            inValue.Body.sDateStart = sDateStart;
            inValue.Body.sDateEnd = sDateEnd;
            return ((STH.BiometricIdentityService.FvtClient.FvtProxy.AuthenticationServiceSoap)(this)).GetVerMetricsAsync(inValue);
        }
    }
}
